// This file is @generated by prost-build.
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AuthReq {}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AuthResp {}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FrameOption {
    ///
    #[prost(int64, tag = "1")]
    pub vega_id: i64,
    ///
    #[prost(string, tag = "2")]
    pub req_id: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "3")]
    pub sequence: i64,
    ///
    #[prost(bool, tag = "4")]
    pub is_ack: bool,
    ///
    #[prost(message, optional, tag = "5")]
    pub status: ::core::option::Option<
        super::super::super::super::bilibili::rpc::Status,
    >,
    ///
    #[prost(string, tag = "6")]
    pub ack_origin: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "7")]
    pub mid: i64,
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct HeartbeatReq {}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct HeartbeatResp {}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MessageAckReq {
    ///
    #[prost(string, tag = "1")]
    pub vega_id: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub req_id: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub origin: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub target_path: ::prost::alloc::string::String,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SubscribeReq {
    ///
    #[prost(message, repeated, tag = "1")]
    pub target_paths: ::prost::alloc::vec::Vec<TargetPath>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TargetPath {
    ///
    #[prost(string, tag = "1")]
    pub key: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "2")]
    pub subs: ::core::option::Option<::prost_types::Any>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VegaFrame {
    ///
    #[prost(message, optional, tag = "1")]
    pub options: ::core::option::Option<FrameOption>,
    ///
    #[prost(string, tag = "2")]
    pub route_path: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "3")]
    pub body: ::core::option::Option<::prost_types::Any>,
    ///
    #[prost(message, optional, tag = "4")]
    pub sub_biz: ::core::option::Option<::prost_types::Any>,
}
