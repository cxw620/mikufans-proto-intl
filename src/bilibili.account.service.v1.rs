// This file is @generated by prost-build.
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Color {
    ///
    #[prost(string, tag = "1")]
    pub color_day: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub color_night: ::prost::alloc::string::String,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ColorsInfo {
    ///
    #[prost(int64, repeated, tag = "1")]
    pub color_ids: ::prost::alloc::vec::Vec<i64>,
    ///
    #[prost(message, repeated, tag = "2")]
    pub color: ::prost::alloc::vec::Vec<Color>,
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NameRender {
    ///
    #[prost(enumeration = "RenderSchemeEnum", tag = "1")]
    pub render_scheme: i32,
    ///
    #[prost(message, optional, tag = "2")]
    pub colors_info: ::core::option::Option<ColorsInfo>,
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum RenderSchemeEnum {
    ///
    Default = 0,
    ///
    Colorful = 1,
}
impl RenderSchemeEnum {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Default => "Default",
            Self::Colorful => "Colorful",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "Default" => Some(Self::Default),
            "Colorful" => Some(Self::Colorful),
            _ => None,
        }
    }
}
